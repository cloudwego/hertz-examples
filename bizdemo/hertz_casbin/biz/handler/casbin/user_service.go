// Code generated by hertz generator.

package casbin

import (
	"context"
	"github.com/darrenli6/hertz-examples/bizdemo/hertz_casbin/biz/dal/mysql"
	"github.com/darrenli6/hertz-examples/bizdemo/hertz_casbin/pkg/utils"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	casbin "github.com/darrenli6/hertz-examples/bizdemo/hertz_casbin/biz/model/casbin"
)

// Login .
// @router /v1/login [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	var err error
	var req casbin.LoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(casbin.QueryUserResponse)
	resp.Code = 0
	resp.Msg = "ok"

	ruser, err := mysql.QueryUser(req.Username, utils.Md5(req.Password))
	if ruser.ID == 0 {
		resp.Code = 2
		resp.Msg = "username or password is wrong"
		c.JSON(consts.StatusOK, resp)
		return
	}

	// get role ids
	rroles := mysql.QueryRolesByUid(int(ruser.ID))
	if len(rroles) < 1 {
		resp.Code = 5
		resp.Msg = "please assign role "
		c.JSON(consts.StatusOK, resp)
		return
	}

	token, err := utils.GenerateToken(uint(ruser.ID), rroles, ruser.Username, 3600*24*30)
	if err != nil {
		resp.Code = 2
		resp.Msg = "username or password is wrong"
		c.JSON(consts.StatusOK, resp)
		return
	}

	resp.Token = token
	c.JSON(consts.StatusOK, resp)
	return
}
