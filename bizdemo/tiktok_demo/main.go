/*
 * Copyright 2023 CloudWeGo Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by hertz generator.

package main

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/hertz-contrib/reverseproxy"

	"github.com/cloudwego/hertz-examples/bizdemo/tiktok_demo/biz/dal"
	"github.com/cloudwego/hertz-examples/bizdemo/tiktok_demo/biz/mw/jwt"
	"github.com/cloudwego/hertz-examples/bizdemo/tiktok_demo/biz/mw/minio"
)

// Set up /src/*name route forwarding to access minio from external network
func minioReverseProxy(c context.Context, ctx *app.RequestContext) {
	proxy, _ := reverseproxy.NewSingleHostReverseProxy("http://localhost:18001")
	ctx.URI().SetPath(ctx.Param("name"))
	hlog.CtxInfof(c, string(ctx.Request.URI().Path()))
	proxy.ServeHTTP(c, ctx)
}

func Init() {
	dal.Init()
	jwt.Init()
	minio.Init()
}

func main() {
	Init()
	h := server.Default(
		server.WithStreamBody(true),
		server.WithHostPorts("0.0.0.0:18005"),
	)

	h.GET("/src/*name", minioReverseProxy)
	register(h)

	h.Spin()
}
