layouts:
  # path只表示handler.go的模板，具体的handler路径由默认路径和handler_dir决定
  - path: handler.go
    delims:
      - '{{'
      - '}}'
    # 修改了 handler 的注释
    body: "// this is my custom handler.\n\npackage {{.PackageName}}\n\nimport (\n\t\"context\"\n\n\t\"github.com/cloudwego/hertz/pkg/app\"\n\n
    {{- range $k, $v := .Imports}}\n\t{{$k}} \"{{$v.Package}}\"\n{{- end}}\n)\n\n{{range $_, $MethodInfo := .Methods}}\n{{$MethodInfo.Comment}}\n
    func {{$MethodInfo.Name}}(ctx context.Context, c *app.RequestContext) { \n
    \t//  you can code something \n\tvar err error\n\t{{if ne $MethodInfo.RequestTypeName \"\" -}}\n\t
    var req {{$MethodInfo.RequestTypeName}}\n\terr = c.BindAndValidate(&req)\n\tif err != nil {\n\t\tc.String(400, err.Error())\n\t\treturn\n\t}\n\t{{end}}\n
    \tresp := new({{$MethodInfo.ReturnTypeName}})\n\n\tc.{{.Serializer}}(200, resp)\n}\n{{end}}\n\t\t\t"
  # path只表示router.go的模板，其路径固定在：biz/router/namespace/
  - path: router.go
    delims:
      - '{{'
      - '}}'
    body: "// Code generated by hertz generator. DO NOT EDIT.\n\npackage {{$.PackageName}}\n\nimport
  (\n\t\"github.com/cloudwego/hertz/pkg/app/server\"\n\n\t{{range $k, $v := .HandlerPackages}}{{$k}}
  \"{{$v}}\"{{end}}\n)\n\n/*\n This file will register all the routes of the services
  in the master idl.\n And it will update automatically when you use the \"update\"
  command for the idl.\n So don't modify the contents of the file, or your code will
  be deleted when it is updated.\n */\n\n{{define \"g\"}}\n{{- if eq .Path \"/\"}}r\n{{-
  else}}{{.GroupName}}{{end}}\n{{- end}}\n\n{{define \"G\"}}\n{{- if ne .Handler \"\"}}\n\t{{-
  .GroupName}}.{{.HttpMethod}}(\"{{.Path}}\", append({{.MiddleWare}}Mw(), {{.Handler}})...)\n{{-
  end}}\n{{- if ne (len .Children) 0}}\n{{.MiddleWare}} := {{template \"g\" .}}.Group(\"{{.Path}}\",
  {{.MiddleWare}}Mw()...)\n{{- end}}\n{{- range $_, $router := .Children}}\n{{- if
  ne .Handler \"\"}}\n\t{{template \"G\" $router}}\n{{- else}}\n\t{\t{{template \"G\"
  $router}}\n\t}\n{{- end}}\n{{- end}}\n{{- end}}\n\n// Register register routes based
  on the IDL 'api.${HTTP Method}' annotation.\nfunc Register(r *server.Hertz) {\n{{template
  \"G\" .Router}}\n}"
  # path只表示register.go的模板，register的路径固定为biz/router/register.go
  - path: register.go
    delims:
      - ""
      - ""
    body: "// Code generated by hertz generator. DO NOT EDIT.\n\npackage router\n\nimport (\n\t\"github.com/cloudwego/hertz/pkg/app/server\"\n\t{{$.PkgAlias}}
  \"{{$.Pkg}}\"\n)\n\n// GeneratedRegister registers routers generated by IDL.\nfunc
  GeneratedRegister(r *server.Hertz){\n\t//INSERT_POINT: DO NOT DELETE THIS LINE!\n\t{{$.PkgAlias}}.Register(r)\n}\n"
  - path: model.go
    delims:
      - ""
      - ""
    body: ""
  # path只表示middleware.go的模板，middleware的路径和router.go一样为：biz/router/namespace/
  - path: middleware.go
    delims:
      - '{{'
      - '}}'
    body: "// Code generated by hertz generator.\n\npackage {{$.PackageName}}\n\nimport (\n\t\"github.com/cloudwego/hertz/pkg/app\"\n)\n\n{{define
  \"M\"}}\nfunc {{.MiddleWare}}Mw() []app.HandlerFunc {\n\t// your code...\n\treturn
  nil\n}\n{{range $_, $router := $.Children}}{{template \"M\" $router}}{{end}}\n{{-
  end}}\n\n{{template \"M\" .Router}}\n\t\t"
  # path只表示client.go的模板，client代码的生成路径由用户指定"${client_dir}"
  - path: client.go
    delims:
      - '{{'
      - '}}'
    body: "// Code generated by hertz generator.\n\npackage {{$.PackageName}}\n\nimport (\n
\   \"github.com/cloudwego/hertz/pkg/app/client\"\n\t\"github.com/cloudwego/hertz/pkg/common/config\"\n)\n\ntype
{{.ServiceName}}Client struct {\n\tclient * client.Client\n}\n\nfunc New{{.ServiceName}}Client(opt
...config.ClientOption) (*{{.ServiceName}}Client, error) {\n\tc, err := client.NewClient(opt...)\n\tif
err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &{{.ServiceName}}Client{\n\t\tclient:
c,\n\t}, nil\n}\n\t\t"